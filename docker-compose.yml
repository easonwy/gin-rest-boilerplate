version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: user-service
    ports:
      - "8080:8080"      # HTTP API
      - "50051:50051"    # gRPC server
      - "50052:50052"    # gRPC HTTP gateway
    environment:
      - APP_ENV=prod
    depends_on:
      - postgres
      - redis
    networks:
      - user-service-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  postgres:
    image: postgres:14-alpine
    container_name: user-service-postgres
    environment:
      - POSTGRES_USER=ewu
      - POSTGRES_PASSWORD=123456
      - POSTGRES_DB=user_auth_prod
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - user-service-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ewu -d user_auth_prod"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  redis:
    image: redis:7-alpine
    container_name: user-service-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - user-service-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

networks:
  user-service-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
